syntax = "proto3";

package bird;
option go_package = "./bird";

message IdReq {
  string id = 1;
}

message GalleryCreateReq {
  optional string id = 1;
  //1:Created
  //2:Normal
  //3:Deleted
  //4:Forbidden
  optional int32 recordState = 2;
  string name = 3;
  optional string userId = 4;
  repeated string traceIds = 5;
}

message GalleryUpdateReq {
  string id = 1;
  //1:Created
  //2:Normal
  //3:Deleted
  //4:Forbidden
  optional int32 recordState = 2;
  optional string name = 3;
  optional string userId = 4;
  optional string TraceId = 6;
}

message GalleryListReq {
  optional string illustrationId = 1;
  optional string name = 2;
  optional int64 startTime = 3;
  optional int64 endTime = 4;
  uint64 page = 5;
  uint64 pageSize = 6;
}

message GalleryResp {
  int64 code = 1;
  string msg = 2;
  GalleryRespData data = 3;
}

message GalleryRespData {
  string id = 1;
  //1:Created
  //2:Normal
  //3:Deleted
  //4:Forbidden
  int32 recordState = 2;
  int64 createTime = 3;
  string name = 4;
  string userId = 5;
  IllustrationsResp Illustration = 6;
}

message GalleryListResp {
  GalleryListRespData data = 1;
  int64 code = 3;
  string msg = 4;
}

message GalleryListRespData {
  repeated GalleryRespData data = 1;
  int64 total = 2;
}

message IllustrationsCreateReq {
  optional string id = 1;
  //1:Created
  //2:Normal
  //3:Deleted
  //4:Forbidden
  int32 recordState = 2;
  string title = 3;
  double score = 4;
  string wikiUrl = 5;
  string imagePath = 6;
  string iconPath = 7;
  repeated string moreImages = 8;
  string typee = 9;
  repeated string labels = 10;
  string description = 11;
}

message IllustrationsUpdateReq {
  string id = 1;
  //1:Created
  //2:Normal
  //3:Deleted
  //4:Forbidden
  optional int32 recordState = 2;
  optional string title = 3;
  optional double score = 4;
  optional string wikiUrl = 5;
  optional string imagePath = 6;
  optional string iconPath = 7;
  repeated string moreImages = 8;
  optional string typee = 9;
  repeated string labels = 10;
  optional string description = 11;
}

message IllustrationsListReq {
  repeated string labels = 1;
  optional string typee = 2;
  //1:Created
  //2:Normal
  //3:Deleted
  //4:Forbidden
  optional int32 state = 3;
  optional string keyword = 4;
  uint64 page = 5;
  uint64 pageSize = 6;
}


message IllustrationsResp {
  string id = 1;
  //1:Created
  //2:Normal
  //3:Deleted
  //4:Forbidden
  int32 recordState = 2;
  int64 createTime = 3;
  string title = 4;
  double score = 5;
  string wikiUrl = 6;
  string imagePath = 7;
  string iconPath = 8;
  repeated string moreImages = 9;
  string typee = 10;
  repeated string labels = 11;
  string description = 12;
}

message IllustrationsRespVo {
  string id = 1;
  //1:Created
  //2:Normal
  //3:Deleted
  //4:Forbidden
  int32 recordState = 2;
  int64 createTime = 3;
  string title = 4;
  double score = 5;
  string wikiUrl = 6;
  string imagePath = 7;
  string iconPath = 8;
  repeated string moreImages = 9;
  string typee = 10;
  repeated LabelResp labels = 11;
  string description = 12;
}

message IllustrationsListResp {
  repeated IllustrationsRespVo results = 1;
  int64 total = 2;
  int64 code = 3;
  string message = 4;
}

message IllustrationsListVo {
  int64 code = 1;
  string message = 2;
  IllustrationsListVoData Data = 3;
}

message IllustrationsListVoData {
  int64 total = 1;
  repeated IllustrationsRespVo Data = 2;
}

message LabelCreateReq{
  optional string id = 1;
  //1:Created
  //2:Normal
  //3:Deleted
  //4:Forbidden
  int32 recordState = 2;
  string name = 3;
  string typee = 4;
  string parentId = 5;
}

message LabelUpdateReq{
  string id = 1;
  //1:Created
  //2:Normal
  //3:Deleted
  //4:Forbidden
  optional int32 recordState = 2;
  optional string name = 3;
  optional string typee = 4;
  optional string parentId = 5;
}

message LabelListReq {
  optional string typee = 2;
  optional string parentId = 3;
  uint64 page = 4;
  uint64 pageSize = 5;
  optional string name = 6;
  optional int32 recordState = 7;
}

message LabelResp{
  string id = 1;
  //1:Created
  //2:Normal
  //3:Deleted
  //4:Forbidden
  int32 recordState = 2;
  int64 createTime = 3;
  string name = 4;
  string typee = 5;
  string parentId = 6;
}

message LabelListResp {
  repeated LabelResp results = 1;
  int64 total = 2;
  int64 code = 3;
  string message = 4;
}

message LabelListVo {
  int64 code = 1;
  string message = 2;
  LabelListVoData data = 3;
}

message LabelListVoData {
  int64 total = 1;
  repeated LabelResp data = 2;
}

message LabelVo {
  int64 code = 1;
  string message = 2;
  LabelResp data = 3;
}

message BooleanResp {
  int64 code = 1;
  string message = 2;
  bool data = 3;
}

service bird {
  //  group: gallery
  rpc galleryCreate(GalleryCreateReq) returns (GalleryResp);
  //  group: gallery
  rpc galleryDelete(IdReq) returns (GalleryResp);
  //  group: gallery
  rpc galleryList(GalleryListReq) returns (GalleryListResp);
  //  group: illustration
  rpc illustrationCreate(IllustrationsCreateReq) returns (IllustrationsResp);
  //  group: illustration
  rpc illustrationUpdate(IllustrationsUpdateReq) returns (IllustrationsResp);
  //  group: illustration
  rpc illustrationList(IllustrationsListReq) returns (IllustrationsListResp);
  //  group: illustration
  rpc findIllustrationByPage(IllustrationsListReq) returns (IllustrationsListVo);
  //  group: illustration
  rpc publishIllustration(IdReq) returns (IllustrationsResp);
  //  group: illustration
  rpc unpublishIllustration(IdReq) returns (IllustrationsResp);
  //  group: illustration
  rpc deleteIllustration(IdReq) returns(BooleanResp);
  //  group: label
  rpc labelCreate(LabelCreateReq) returns (LabelResp);
  //  group: label
  rpc labelUpdate(LabelUpdateReq) returns (LabelResp);
  //  group: label
  rpc labelList(LabelListReq) returns (LabelListResp);
  //  group: label
  rpc findLabelByPage(LabelListReq) returns (LabelListVo);
  //  group: label
  rpc findLabelById (IdReq) returns (LabelVo);
  //  group: label
  rpc publishLabel(IdReq) returns (LabelResp);
  //  group: label
  rpc unpublishLabel(IdReq) returns (LabelResp);
  //  group: label
  rpc deleteLabel(IdReq) returns(BooleanResp);
}