// Code generated by goctl. DO NOT EDIT.
// Source: bird.proto

package server

import (
	"context"

	"synergy-bird-rpc/internal/logic/gallery"
	"synergy-bird-rpc/internal/logic/illustration"
	"synergy-bird-rpc/internal/logic/label"
	"synergy-bird-rpc/internal/svc"
	"synergy-bird-rpc/types/bird"
)

type BirdServer struct {
	svcCtx *svc.ServiceContext
	bird.UnimplementedBirdServer
}

func NewBirdServer(svcCtx *svc.ServiceContext) *BirdServer {
	return &BirdServer{
		svcCtx: svcCtx,
	}
}

func (s *BirdServer) GalleryCreate(ctx context.Context, in *bird.GalleryCreateReq) (*bird.GalleryResp, error) {
	l := gallery.NewGalleryCreateLogic(ctx, s.svcCtx)
	return l.GalleryCreate(in)
}

func (s *BirdServer) GalleryUpdate(ctx context.Context, in *bird.GalleryUpdateReq) (*bird.GalleryResp, error) {
	l := gallery.NewGalleryUpdateLogic(ctx, s.svcCtx)
	return l.GalleryUpdate(in)
}

func (s *BirdServer) GalleryList(ctx context.Context, in *bird.GalleryListReq) (*bird.GalleryListResp, error) {
	l := gallery.NewGalleryListLogic(ctx, s.svcCtx)
	return l.GalleryList(in)
}

func (s *BirdServer) IllustrationCreate(ctx context.Context, in *bird.IllustrationsCreateReq) (*bird.IllustrationsResp, error) {
	l := illustration.NewIllustrationCreateLogic(ctx, s.svcCtx)
	return l.IllustrationCreate(in)
}

func (s *BirdServer) IllustrationUpdate(ctx context.Context, in *bird.IllustrationsUpdateReq) (*bird.IllustrationsResp, error) {
	l := illustration.NewIllustrationUpdateLogic(ctx, s.svcCtx)
	return l.IllustrationUpdate(in)
}

func (s *BirdServer) IllustrationList(ctx context.Context, in *bird.IllustrationsListReq) (*bird.IllustrationsListResp, error) {
	l := illustration.NewIllustrationListLogic(ctx, s.svcCtx)
	return l.IllustrationList(in)
}

func (s *BirdServer) FetchUserIllustration(ctx context.Context, in *bird.FetchUserIllustrationReq) (*bird.FetchUserIllustrationResp, error) {
	l := illustration.NewFetchUserIllustrationLogic(ctx, s.svcCtx)
	return l.FetchUserIllustration(in)
}

func (s *BirdServer) LabelCreate(ctx context.Context, in *bird.LabelCreateReq) (*bird.LabelResp, error) {
	l := label.NewLabelCreateLogic(ctx, s.svcCtx)
	return l.LabelCreate(in)
}

func (s *BirdServer) LabelUpdate(ctx context.Context, in *bird.LabelUpdateReq) (*bird.LabelResp, error) {
	l := label.NewLabelUpdateLogic(ctx, s.svcCtx)
	return l.LabelUpdate(in)
}

func (s *BirdServer) LabelList(ctx context.Context, in *bird.LabelListReq) (*bird.LabelListResp, error) {
	l := label.NewLabelListLogic(ctx, s.svcCtx)
	return l.LabelList(in)
}
