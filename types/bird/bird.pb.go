// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: bird.proto

package bird

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GalleryCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// 1:Created
	// 2:Normal
	// 3:Deleted
	// 4:Forbidden
	RecordState int32    `protobuf:"varint,2,opt,name=recordState,proto3" json:"recordState,omitempty"`
	Name        string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	UserId      string   `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`
	Favorite    int32    `protobuf:"varint,5,opt,name=favorite,proto3" json:"favorite,omitempty"`
	Labels      []string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *GalleryCreateReq) Reset() {
	*x = GalleryCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalleryCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalleryCreateReq) ProtoMessage() {}

func (x *GalleryCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalleryCreateReq.ProtoReflect.Descriptor instead.
func (*GalleryCreateReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{0}
}

func (x *GalleryCreateReq) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *GalleryCreateReq) GetRecordState() int32 {
	if x != nil {
		return x.RecordState
	}
	return 0
}

func (x *GalleryCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GalleryCreateReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GalleryCreateReq) GetFavorite() int32 {
	if x != nil {
		return x.Favorite
	}
	return 0
}

func (x *GalleryCreateReq) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type GalleryUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 1:Created
	// 2:Normal
	// 3:Deleted
	// 4:Forbidden
	RecordState *int32   `protobuf:"varint,2,opt,name=recordState,proto3,oneof" json:"recordState,omitempty"`
	Name        *string  `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	UserId      *string  `protobuf:"bytes,4,opt,name=userId,proto3,oneof" json:"userId,omitempty"`
	Favorite    *int32   `protobuf:"varint,5,opt,name=favorite,proto3,oneof" json:"favorite,omitempty"`
	Labels      []string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *GalleryUpdateReq) Reset() {
	*x = GalleryUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalleryUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalleryUpdateReq) ProtoMessage() {}

func (x *GalleryUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalleryUpdateReq.ProtoReflect.Descriptor instead.
func (*GalleryUpdateReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{1}
}

func (x *GalleryUpdateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GalleryUpdateReq) GetRecordState() int32 {
	if x != nil && x.RecordState != nil {
		return *x.RecordState
	}
	return 0
}

func (x *GalleryUpdateReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GalleryUpdateReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *GalleryUpdateReq) GetFavorite() int32 {
	if x != nil && x.Favorite != nil {
		return *x.Favorite
	}
	return 0
}

func (x *GalleryUpdateReq) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type GalleryListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Labels   []string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
	Favorite int32    `protobuf:"varint,3,opt,name=favorite,proto3" json:"favorite,omitempty"`
	Page     uint64   `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint64   `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GalleryListReq) Reset() {
	*x = GalleryListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalleryListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalleryListReq) ProtoMessage() {}

func (x *GalleryListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalleryListReq.ProtoReflect.Descriptor instead.
func (*GalleryListReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{2}
}

func (x *GalleryListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GalleryListReq) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GalleryListReq) GetFavorite() int32 {
	if x != nil {
		return x.Favorite
	}
	return 0
}

func (x *GalleryListReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GalleryListReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GalleryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 1:Created
	// 2:Normal
	// 3:Deleted
	// 4:Forbidden
	RecordState int32    `protobuf:"varint,2,opt,name=recordState,proto3" json:"recordState,omitempty"`
	CreateTime  int64    `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Name        string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	UserId      string   `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId,omitempty"`
	Favorite    int32    `protobuf:"varint,6,opt,name=favorite,proto3" json:"favorite,omitempty"`
	Labels      []string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *GalleryResp) Reset() {
	*x = GalleryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalleryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalleryResp) ProtoMessage() {}

func (x *GalleryResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalleryResp.ProtoReflect.Descriptor instead.
func (*GalleryResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{3}
}

func (x *GalleryResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GalleryResp) GetRecordState() int32 {
	if x != nil {
		return x.RecordState
	}
	return 0
}

func (x *GalleryResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GalleryResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GalleryResp) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GalleryResp) GetFavorite() int32 {
	if x != nil {
		return x.Favorite
	}
	return 0
}

func (x *GalleryResp) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type GalleryListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*GalleryResp `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Code    int64          `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Message string         `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GalleryListResp) Reset() {
	*x = GalleryListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalleryListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalleryListResp) ProtoMessage() {}

func (x *GalleryListResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalleryListResp.ProtoReflect.Descriptor instead.
func (*GalleryListResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{4}
}

func (x *GalleryListResp) GetResults() []*GalleryResp {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *GalleryListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GalleryListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GalleryListResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type IllustrationsCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// 1:Created
	// 2:Normal
	// 3:Deleted
	// 4:Forbidden
	RecordState int32    `protobuf:"varint,2,opt,name=recordState,proto3" json:"recordState,omitempty"`
	Title       string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Score       float64  `protobuf:"fixed64,4,opt,name=score,proto3" json:"score,omitempty"`
	WikiUrl     string   `protobuf:"bytes,5,opt,name=wikiUrl,proto3" json:"wikiUrl,omitempty"`
	ImagePath   string   `protobuf:"bytes,6,opt,name=imagePath,proto3" json:"imagePath,omitempty"`
	IconPath    string   `protobuf:"bytes,7,opt,name=iconPath,proto3" json:"iconPath,omitempty"`
	MoreImages  []string `protobuf:"bytes,8,rep,name=moreImages,proto3" json:"moreImages,omitempty"`
	Type        string   `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	Labels      []string `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty"`
	Description string   `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *IllustrationsCreateReq) Reset() {
	*x = IllustrationsCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IllustrationsCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IllustrationsCreateReq) ProtoMessage() {}

func (x *IllustrationsCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IllustrationsCreateReq.ProtoReflect.Descriptor instead.
func (*IllustrationsCreateReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{5}
}

func (x *IllustrationsCreateReq) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *IllustrationsCreateReq) GetRecordState() int32 {
	if x != nil {
		return x.RecordState
	}
	return 0
}

func (x *IllustrationsCreateReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IllustrationsCreateReq) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *IllustrationsCreateReq) GetWikiUrl() string {
	if x != nil {
		return x.WikiUrl
	}
	return ""
}

func (x *IllustrationsCreateReq) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *IllustrationsCreateReq) GetIconPath() string {
	if x != nil {
		return x.IconPath
	}
	return ""
}

func (x *IllustrationsCreateReq) GetMoreImages() []string {
	if x != nil {
		return x.MoreImages
	}
	return nil
}

func (x *IllustrationsCreateReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *IllustrationsCreateReq) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *IllustrationsCreateReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type IllustrationsUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 1:Created
	// 2:Normal
	// 3:Deleted
	// 4:Forbidden
	RecordState *int32   `protobuf:"varint,2,opt,name=recordState,proto3,oneof" json:"recordState,omitempty"`
	Title       *string  `protobuf:"bytes,3,opt,name=title,proto3,oneof" json:"title,omitempty"`
	Score       *float64 `protobuf:"fixed64,4,opt,name=score,proto3,oneof" json:"score,omitempty"`
	WikiUrl     *string  `protobuf:"bytes,5,opt,name=wikiUrl,proto3,oneof" json:"wikiUrl,omitempty"`
	ImagePath   *string  `protobuf:"bytes,6,opt,name=imagePath,proto3,oneof" json:"imagePath,omitempty"`
	IconPath    *string  `protobuf:"bytes,7,opt,name=iconPath,proto3,oneof" json:"iconPath,omitempty"`
	MoreImages  []string `protobuf:"bytes,8,rep,name=moreImages,proto3" json:"moreImages,omitempty"`
	Type        *string  `protobuf:"bytes,9,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Labels      []string `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty"`
	Description *string  `protobuf:"bytes,11,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *IllustrationsUpdateReq) Reset() {
	*x = IllustrationsUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IllustrationsUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IllustrationsUpdateReq) ProtoMessage() {}

func (x *IllustrationsUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IllustrationsUpdateReq.ProtoReflect.Descriptor instead.
func (*IllustrationsUpdateReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{6}
}

func (x *IllustrationsUpdateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IllustrationsUpdateReq) GetRecordState() int32 {
	if x != nil && x.RecordState != nil {
		return *x.RecordState
	}
	return 0
}

func (x *IllustrationsUpdateReq) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *IllustrationsUpdateReq) GetScore() float64 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *IllustrationsUpdateReq) GetWikiUrl() string {
	if x != nil && x.WikiUrl != nil {
		return *x.WikiUrl
	}
	return ""
}

func (x *IllustrationsUpdateReq) GetImagePath() string {
	if x != nil && x.ImagePath != nil {
		return *x.ImagePath
	}
	return ""
}

func (x *IllustrationsUpdateReq) GetIconPath() string {
	if x != nil && x.IconPath != nil {
		return *x.IconPath
	}
	return ""
}

func (x *IllustrationsUpdateReq) GetMoreImages() []string {
	if x != nil {
		return x.MoreImages
	}
	return nil
}

func (x *IllustrationsUpdateReq) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *IllustrationsUpdateReq) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *IllustrationsUpdateReq) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type IllustrationsListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels []string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	UserId string   `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Type   string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// 1:Created
	// 2:Normal
	// 3:Deleted
	// 4:Forbidden
	State    int32  `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	Keyword  string `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Page     uint64 `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint64 `protobuf:"varint,7,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *IllustrationsListReq) Reset() {
	*x = IllustrationsListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IllustrationsListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IllustrationsListReq) ProtoMessage() {}

func (x *IllustrationsListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IllustrationsListReq.ProtoReflect.Descriptor instead.
func (*IllustrationsListReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{7}
}

func (x *IllustrationsListReq) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *IllustrationsListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *IllustrationsListReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *IllustrationsListReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *IllustrationsListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *IllustrationsListReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *IllustrationsListReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type FetchUserIllustrationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels []string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	UserId string   `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Type   string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// 1:Created
	// 2:Normal
	// 3:Deleted
	// 4:Forbidden
	State    int32  `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	Keyword  string `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Page     uint64 `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint64 `protobuf:"varint,7,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *FetchUserIllustrationReq) Reset() {
	*x = FetchUserIllustrationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchUserIllustrationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchUserIllustrationReq) ProtoMessage() {}

func (x *FetchUserIllustrationReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchUserIllustrationReq.ProtoReflect.Descriptor instead.
func (*FetchUserIllustrationReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{8}
}

func (x *FetchUserIllustrationReq) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *FetchUserIllustrationReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FetchUserIllustrationReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FetchUserIllustrationReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *FetchUserIllustrationReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *FetchUserIllustrationReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FetchUserIllustrationReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type IllustrationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 1:Created
	// 2:Normal
	// 3:Deleted
	// 4:Forbidden
	RecordState int32    `protobuf:"varint,2,opt,name=recordState,proto3" json:"recordState,omitempty"`
	CreateTime  int64    `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Title       string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Score       float64  `protobuf:"fixed64,5,opt,name=score,proto3" json:"score,omitempty"`
	WikiUrl     string   `protobuf:"bytes,6,opt,name=wikiUrl,proto3" json:"wikiUrl,omitempty"`
	ImagePath   string   `protobuf:"bytes,7,opt,name=imagePath,proto3" json:"imagePath,omitempty"`
	IconPath    string   `protobuf:"bytes,8,opt,name=iconPath,proto3" json:"iconPath,omitempty"`
	MoreImages  []string `protobuf:"bytes,9,rep,name=moreImages,proto3" json:"moreImages,omitempty"`
	Type        string   `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Labels      []string `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty"`
	Description string   `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *IllustrationsResp) Reset() {
	*x = IllustrationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IllustrationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IllustrationsResp) ProtoMessage() {}

func (x *IllustrationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IllustrationsResp.ProtoReflect.Descriptor instead.
func (*IllustrationsResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{9}
}

func (x *IllustrationsResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IllustrationsResp) GetRecordState() int32 {
	if x != nil {
		return x.RecordState
	}
	return 0
}

func (x *IllustrationsResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *IllustrationsResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IllustrationsResp) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *IllustrationsResp) GetWikiUrl() string {
	if x != nil {
		return x.WikiUrl
	}
	return ""
}

func (x *IllustrationsResp) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *IllustrationsResp) GetIconPath() string {
	if x != nil {
		return x.IconPath
	}
	return ""
}

func (x *IllustrationsResp) GetMoreImages() []string {
	if x != nil {
		return x.MoreImages
	}
	return nil
}

func (x *IllustrationsResp) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *IllustrationsResp) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *IllustrationsResp) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type IllustrationsListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*IllustrationsResp `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   int64                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Code    int64                `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Message string               `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *IllustrationsListResp) Reset() {
	*x = IllustrationsListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IllustrationsListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IllustrationsListResp) ProtoMessage() {}

func (x *IllustrationsListResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IllustrationsListResp.ProtoReflect.Descriptor instead.
func (*IllustrationsListResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{10}
}

func (x *IllustrationsListResp) GetResults() []*IllustrationsResp {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *IllustrationsListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *IllustrationsListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IllustrationsListResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FetchUserIllustrationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId              string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Type                string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	GainedIllustrations []string `protobuf:"bytes,3,rep,name=gainedIllustrations,proto3" json:"gainedIllustrations,omitempty"`
	Id                  string   `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	// 1:Created
	// 2:Normal
	// 3:Deleted
	// 4:Forbidden
	RecordState int32 `protobuf:"varint,5,opt,name=recordState,proto3" json:"recordState,omitempty"`
	CreateTime  int64 `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *FetchUserIllustrationResp) Reset() {
	*x = FetchUserIllustrationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchUserIllustrationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchUserIllustrationResp) ProtoMessage() {}

func (x *FetchUserIllustrationResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchUserIllustrationResp.ProtoReflect.Descriptor instead.
func (*FetchUserIllustrationResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{11}
}

func (x *FetchUserIllustrationResp) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FetchUserIllustrationResp) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FetchUserIllustrationResp) GetGainedIllustrations() []string {
	if x != nil {
		return x.GainedIllustrations
	}
	return nil
}

func (x *FetchUserIllustrationResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FetchUserIllustrationResp) GetRecordState() int32 {
	if x != nil {
		return x.RecordState
	}
	return 0
}

func (x *FetchUserIllustrationResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type LabelCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// 1:Created
	// 2:Normal
	// 3:Deleted
	// 4:Forbidden
	RecordState int32  `protobuf:"varint,2,opt,name=recordState,proto3" json:"recordState,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type        string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	ParentId    string `protobuf:"bytes,5,opt,name=parentId,proto3" json:"parentId,omitempty"`
}

func (x *LabelCreateReq) Reset() {
	*x = LabelCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelCreateReq) ProtoMessage() {}

func (x *LabelCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelCreateReq.ProtoReflect.Descriptor instead.
func (*LabelCreateReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{12}
}

func (x *LabelCreateReq) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *LabelCreateReq) GetRecordState() int32 {
	if x != nil {
		return x.RecordState
	}
	return 0
}

func (x *LabelCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LabelCreateReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LabelCreateReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

type LabelUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 1:Created
	// 2:Normal
	// 3:Deleted
	// 4:Forbidden
	RecordState *int32  `protobuf:"varint,2,opt,name=recordState,proto3,oneof" json:"recordState,omitempty"`
	Name        *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Type        *string `protobuf:"bytes,4,opt,name=type,proto3,oneof" json:"type,omitempty"`
	ParentId    *string `protobuf:"bytes,5,opt,name=parentId,proto3,oneof" json:"parentId,omitempty"`
}

func (x *LabelUpdateReq) Reset() {
	*x = LabelUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelUpdateReq) ProtoMessage() {}

func (x *LabelUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelUpdateReq.ProtoReflect.Descriptor instead.
func (*LabelUpdateReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{13}
}

func (x *LabelUpdateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LabelUpdateReq) GetRecordState() int32 {
	if x != nil && x.RecordState != nil {
		return *x.RecordState
	}
	return 0
}

func (x *LabelUpdateReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LabelUpdateReq) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *LabelUpdateReq) GetParentId() string {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return ""
}

type LabelListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	ParentId string `protobuf:"bytes,3,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Page     uint64 `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint64 `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *LabelListReq) Reset() {
	*x = LabelListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelListReq) ProtoMessage() {}

func (x *LabelListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelListReq.ProtoReflect.Descriptor instead.
func (*LabelListReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{14}
}

func (x *LabelListReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LabelListReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *LabelListReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *LabelListReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type LabelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 1:Created
	// 2:Normal
	// 3:Deleted
	// 4:Forbidden
	RecordState int32  `protobuf:"varint,2,opt,name=recordState,proto3" json:"recordState,omitempty"`
	CreateTime  int64  `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Type        string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	ParentId    string `protobuf:"bytes,6,opt,name=parentId,proto3" json:"parentId,omitempty"`
}

func (x *LabelResp) Reset() {
	*x = LabelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelResp) ProtoMessage() {}

func (x *LabelResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelResp.ProtoReflect.Descriptor instead.
func (*LabelResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{15}
}

func (x *LabelResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LabelResp) GetRecordState() int32 {
	if x != nil {
		return x.RecordState
	}
	return 0
}

func (x *LabelResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *LabelResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LabelResp) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LabelResp) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

type LabelListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*LabelResp `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Code    int64        `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Message string       `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LabelListResp) Reset() {
	*x = LabelListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelListResp) ProtoMessage() {}

func (x *LabelListResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelListResp.ProtoReflect.Descriptor instead.
func (*LabelListResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{16}
}

func (x *LabelListResp) GetResults() []*LabelResp {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *LabelListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LabelListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LabelListResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_bird_proto protoreflect.FileDescriptor

var file_bird_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x62, 0x69,
	0x72, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x10, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x42, 0x05,
	0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0xe9, 0x01, 0x0a, 0x10, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0b, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x08, 0x66, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0xbf, 0x01, 0x0a, 0x0b, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0f, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x47,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc4, 0x02, 0x0a, 0x16, 0x49, 0x6c, 0x6c, 0x75,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x6b, 0x69, 0x55, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x6b, 0x69, 0x55, 0x72, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x63, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x63, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x72,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x6f, 0x72, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0xc4,
	0x03, 0x0a, 0x16, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0b, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x77, 0x69, 0x6b, 0x69, 0x55, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x77, 0x69, 0x6b, 0x69, 0x55,
	0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x69, 0x63,
	0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x72,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x6f, 0x72, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x07, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x77, 0x69, 0x6b, 0x69, 0x55, 0x72,
	0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xba, 0x01, 0x0a, 0x14, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x18, 0x46, 0x65, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0xd3, 0x02, 0x0a, 0x11, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x6b, 0x69, 0x55,
	0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x6b, 0x69, 0x55, 0x72,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x6f, 0x72, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x6f, 0x72, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x15, 0x49, 0x6c,
	0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c, 0x75,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x19, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x67, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x49, 0x6c,
	0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x13, 0x67, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0xc9, 0x01,
	0x0a, 0x0e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x25, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x0c, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x09, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x7e, 0x0a,
	0x0d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x29,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x9d, 0x05,
	0x0a, 0x04, 0x62, 0x69, 0x72, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x47,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x11, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0d, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x47, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x62, 0x69,
	0x72, 0x64, 0x2e, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a,
	0x0a, 0x0b, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e,
	0x62, 0x69, 0x72, 0x64, 0x2e, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x47, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x69, 0x6c,
	0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x69, 0x6c, 0x6c, 0x75, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e,
	0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x62, 0x69,
	0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x10, 0x69, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e,
	0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c, 0x75,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x58, 0x0a, 0x15, 0x66, 0x65, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6c,
	0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x62, 0x69, 0x72,
	0x64, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6c, 0x6c, 0x75, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x62, 0x69, 0x72,
	0x64, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6c, 0x6c, 0x75, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0b, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x62, 0x69, 0x72,
	0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x0f, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x34, 0x0a, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x14, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x08, 0x5a,
	0x06, 0x2e, 0x2f, 0x62, 0x69, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bird_proto_rawDescOnce sync.Once
	file_bird_proto_rawDescData = file_bird_proto_rawDesc
)

func file_bird_proto_rawDescGZIP() []byte {
	file_bird_proto_rawDescOnce.Do(func() {
		file_bird_proto_rawDescData = protoimpl.X.CompressGZIP(file_bird_proto_rawDescData)
	})
	return file_bird_proto_rawDescData
}

var file_bird_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_bird_proto_goTypes = []interface{}{
	(*GalleryCreateReq)(nil),          // 0: bird.GalleryCreateReq
	(*GalleryUpdateReq)(nil),          // 1: bird.GalleryUpdateReq
	(*GalleryListReq)(nil),            // 2: bird.GalleryListReq
	(*GalleryResp)(nil),               // 3: bird.GalleryResp
	(*GalleryListResp)(nil),           // 4: bird.GalleryListResp
	(*IllustrationsCreateReq)(nil),    // 5: bird.IllustrationsCreateReq
	(*IllustrationsUpdateReq)(nil),    // 6: bird.IllustrationsUpdateReq
	(*IllustrationsListReq)(nil),      // 7: bird.IllustrationsListReq
	(*FetchUserIllustrationReq)(nil),  // 8: bird.FetchUserIllustrationReq
	(*IllustrationsResp)(nil),         // 9: bird.IllustrationsResp
	(*IllustrationsListResp)(nil),     // 10: bird.IllustrationsListResp
	(*FetchUserIllustrationResp)(nil), // 11: bird.FetchUserIllustrationResp
	(*LabelCreateReq)(nil),            // 12: bird.LabelCreateReq
	(*LabelUpdateReq)(nil),            // 13: bird.LabelUpdateReq
	(*LabelListReq)(nil),              // 14: bird.LabelListReq
	(*LabelResp)(nil),                 // 15: bird.LabelResp
	(*LabelListResp)(nil),             // 16: bird.LabelListResp
}
var file_bird_proto_depIdxs = []int32{
	3,  // 0: bird.GalleryListResp.results:type_name -> bird.GalleryResp
	9,  // 1: bird.IllustrationsListResp.results:type_name -> bird.IllustrationsResp
	15, // 2: bird.LabelListResp.results:type_name -> bird.LabelResp
	0,  // 3: bird.bird.galleryCreate:input_type -> bird.GalleryCreateReq
	1,  // 4: bird.bird.galleryUpdate:input_type -> bird.GalleryUpdateReq
	2,  // 5: bird.bird.galleryList:input_type -> bird.GalleryListReq
	5,  // 6: bird.bird.illustrationCreate:input_type -> bird.IllustrationsCreateReq
	6,  // 7: bird.bird.illustrationUpdate:input_type -> bird.IllustrationsUpdateReq
	7,  // 8: bird.bird.illustrationList:input_type -> bird.IllustrationsListReq
	8,  // 9: bird.bird.fetchUserIllustration:input_type -> bird.FetchUserIllustrationReq
	12, // 10: bird.bird.labelCreate:input_type -> bird.LabelCreateReq
	13, // 11: bird.bird.labelUpdate:input_type -> bird.LabelUpdateReq
	14, // 12: bird.bird.labelList:input_type -> bird.LabelListReq
	3,  // 13: bird.bird.galleryCreate:output_type -> bird.GalleryResp
	3,  // 14: bird.bird.galleryUpdate:output_type -> bird.GalleryResp
	4,  // 15: bird.bird.galleryList:output_type -> bird.GalleryListResp
	9,  // 16: bird.bird.illustrationCreate:output_type -> bird.IllustrationsResp
	9,  // 17: bird.bird.illustrationUpdate:output_type -> bird.IllustrationsResp
	10, // 18: bird.bird.illustrationList:output_type -> bird.IllustrationsListResp
	11, // 19: bird.bird.fetchUserIllustration:output_type -> bird.FetchUserIllustrationResp
	15, // 20: bird.bird.labelCreate:output_type -> bird.LabelResp
	15, // 21: bird.bird.labelUpdate:output_type -> bird.LabelResp
	16, // 22: bird.bird.labelList:output_type -> bird.LabelListResp
	13, // [13:23] is the sub-list for method output_type
	3,  // [3:13] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_bird_proto_init() }
func file_bird_proto_init() {
	if File_bird_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bird_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalleryCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalleryUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalleryListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalleryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalleryListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IllustrationsCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IllustrationsUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IllustrationsListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchUserIllustrationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IllustrationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IllustrationsListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchUserIllustrationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bird_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[13].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bird_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bird_proto_goTypes,
		DependencyIndexes: file_bird_proto_depIdxs,
		MessageInfos:      file_bird_proto_msgTypes,
	}.Build()
	File_bird_proto = out.File
	file_bird_proto_rawDesc = nil
	file_bird_proto_goTypes = nil
	file_bird_proto_depIdxs = nil
}
