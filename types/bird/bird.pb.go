// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.19.4
// source: bird.proto

package bird

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GalleryListRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*GalleryRespData `protobuf:"bytes,1,rep,name=data,proto3" json:"data"`
	Total int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *GalleryListRespData) Reset() {
	*x = GalleryListRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalleryListRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalleryListRespData) ProtoMessage() {}

func (x *GalleryListRespData) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalleryListRespData.ProtoReflect.Descriptor instead.
func (*GalleryListRespData) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{0}
}

func (x *GalleryListRespData) GetData() []*GalleryRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GalleryListRespData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type IllustrationsListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels []string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels"`
	Typee  *string  `protobuf:"bytes,2,opt,name=typee,proto3,oneof" json:"typee"`
	// 1:Created
	State    *int32  `protobuf:"varint,3,opt,name=state,proto3,oneof" json:"state"`
	Keyword  *string `protobuf:"bytes,4,opt,name=keyword,proto3,oneof" json:"keyword"`
	Page     uint64  `protobuf:"varint,5,opt,name=page,proto3" json:"page"`
	PageSize uint64  `protobuf:"varint,6,opt,name=pageSize,proto3" json:"pageSize"`
}

func (x *IllustrationsListReq) Reset() {
	*x = IllustrationsListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IllustrationsListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IllustrationsListReq) ProtoMessage() {}

func (x *IllustrationsListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IllustrationsListReq.ProtoReflect.Descriptor instead.
func (*IllustrationsListReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{1}
}

func (x *IllustrationsListReq) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *IllustrationsListReq) GetTypee() string {
	if x != nil && x.Typee != nil {
		return *x.Typee
	}
	return ""
}

func (x *IllustrationsListReq) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *IllustrationsListReq) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *IllustrationsListReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *IllustrationsListReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ClassesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	ClassesId   int64  `protobuf:"varint,2,opt,name=ClassesId,proto3" json:"ClassesId"`
	ClassesName string `protobuf:"bytes,3,opt,name=ClassesName,proto3" json:"ClassesName"`
	ChineseName string `protobuf:"bytes,4,opt,name=ChineseName,proto3" json:"ChineseName"`
	EnglishName string `protobuf:"bytes,5,opt,name=EnglishName,proto3" json:"EnglishName"`
}

func (x *ClassesData) Reset() {
	*x = ClassesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassesData) ProtoMessage() {}

func (x *ClassesData) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassesData.ProtoReflect.Descriptor instead.
func (*ClassesData) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{2}
}

func (x *ClassesData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClassesData) GetClassesId() int64 {
	if x != nil {
		return x.ClassesId
	}
	return 0
}

func (x *ClassesData) GetClassesName() string {
	if x != nil {
		return x.ClassesName
	}
	return ""
}

func (x *ClassesData) GetChineseName() string {
	if x != nil {
		return x.ChineseName
	}
	return ""
}

func (x *ClassesData) GetEnglishName() string {
	if x != nil {
		return x.EnglishName
	}
	return ""
}

type GalleryCountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unlock int32 `protobuf:"varint,1,opt,name=Unlock,proto3" json:"Unlock"`
	Lock   int32 `protobuf:"varint,2,opt,name=Lock,proto3" json:"Lock"`
	Count  int32 `protobuf:"varint,3,opt,name=Count,proto3" json:"Count"`
}

func (x *GalleryCountData) Reset() {
	*x = GalleryCountData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalleryCountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalleryCountData) ProtoMessage() {}

func (x *GalleryCountData) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalleryCountData.ProtoReflect.Descriptor instead.
func (*GalleryCountData) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{3}
}

func (x *GalleryCountData) GetUnlock() int32 {
	if x != nil {
		return x.Unlock
	}
	return 0
}

func (x *GalleryCountData) GetLock() int32 {
	if x != nil {
		return x.Lock
	}
	return 0
}

func (x *GalleryCountData) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

//  base message
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{4}
}

type LabelListVo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64            `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *LabelListVoData `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *LabelListVo) Reset() {
	*x = LabelListVo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelListVo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelListVo) ProtoMessage() {}

func (x *LabelListVo) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelListVo.ProtoReflect.Descriptor instead.
func (*LabelListVo) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{5}
}

func (x *LabelListVo) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LabelListVo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LabelListVo) GetData() *LabelListVoData {
	if x != nil {
		return x.Data
	}
	return nil
}

type NullReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NullReq) Reset() {
	*x = NullReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NullReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NullReq) ProtoMessage() {}

func (x *NullReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NullReq.ProtoReflect.Descriptor instead.
func (*NullReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{6}
}

type HeadlineQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurId string `protobuf:"bytes,1,opt,name=curId,proto3" json:"curId"`
}

func (x *HeadlineQueryReq) Reset() {
	*x = HeadlineQueryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeadlineQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadlineQueryReq) ProtoMessage() {}

func (x *HeadlineQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadlineQueryReq.ProtoReflect.Descriptor instead.
func (*HeadlineQueryReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{7}
}

func (x *HeadlineQueryReq) GetCurId() string {
	if x != nil {
		return x.CurId
	}
	return ""
}

type LabelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 1:Created
	RecordState int32  `protobuf:"varint,2,opt,name=recordState,proto3" json:"recordState"`
	CreateTime  int64  `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime"`
	Name        string `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	Typee       string `protobuf:"bytes,5,opt,name=typee,proto3" json:"typee"`
	ParentId    string `protobuf:"bytes,6,opt,name=parentId,proto3" json:"parentId"`
}

func (x *LabelResp) Reset() {
	*x = LabelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelResp) ProtoMessage() {}

func (x *LabelResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelResp.ProtoReflect.Descriptor instead.
func (*LabelResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{8}
}

func (x *LabelResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LabelResp) GetRecordState() int32 {
	if x != nil {
		return x.RecordState
	}
	return 0
}

func (x *LabelResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *LabelResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LabelResp) GetTypee() string {
	if x != nil {
		return x.Typee
	}
	return ""
}

func (x *LabelResp) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

type GalleryCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id"`
	// 1:Created
	RecordState *int32   `protobuf:"varint,2,opt,name=recordState,proto3,oneof" json:"recordState"`
	Name        string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	UserId      *string  `protobuf:"bytes,4,opt,name=userId,proto3,oneof" json:"userId"`
	TraceIds    []string `protobuf:"bytes,5,rep,name=traceIds,proto3" json:"traceIds"`
}

func (x *GalleryCreateReq) Reset() {
	*x = GalleryCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalleryCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalleryCreateReq) ProtoMessage() {}

func (x *GalleryCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalleryCreateReq.ProtoReflect.Descriptor instead.
func (*GalleryCreateReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{9}
}

func (x *GalleryCreateReq) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *GalleryCreateReq) GetRecordState() int32 {
	if x != nil && x.RecordState != nil {
		return *x.RecordState
	}
	return 0
}

func (x *GalleryCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GalleryCreateReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *GalleryCreateReq) GetTraceIds() []string {
	if x != nil {
		return x.TraceIds
	}
	return nil
}

type LabelListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Typee       *string `protobuf:"bytes,2,opt,name=typee,proto3,oneof" json:"typee"`
	ParentId    *string `protobuf:"bytes,3,opt,name=parentId,proto3,oneof" json:"parentId"`
	Page        uint64  `protobuf:"varint,4,opt,name=page,proto3" json:"page"`
	PageSize    uint64  `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize"`
	Name        *string `protobuf:"bytes,6,opt,name=name,proto3,oneof" json:"name"`
	RecordState *int32  `protobuf:"varint,7,opt,name=recordState,proto3,oneof" json:"recordState"`
}

func (x *LabelListReq) Reset() {
	*x = LabelListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelListReq) ProtoMessage() {}

func (x *LabelListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelListReq.ProtoReflect.Descriptor instead.
func (*LabelListReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{10}
}

func (x *LabelListReq) GetTypee() string {
	if x != nil && x.Typee != nil {
		return *x.Typee
	}
	return ""
}

func (x *LabelListReq) GetParentId() string {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return ""
}

func (x *LabelListReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *LabelListReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *LabelListReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LabelListReq) GetRecordState() int32 {
	if x != nil && x.RecordState != nil {
		return *x.RecordState
	}
	return 0
}

type LabelListVoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64        `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Data  []*LabelResp `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *LabelListVoData) Reset() {
	*x = LabelListVoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelListVoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelListVoData) ProtoMessage() {}

func (x *LabelListVoData) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelListVoData.ProtoReflect.Descriptor instead.
func (*LabelListVoData) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{11}
}

func (x *LabelListVoData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LabelListVoData) GetData() []*LabelResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type ClassesListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int64          `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Msg   string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	Total int64          `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
	Data  []*ClassesData `protobuf:"bytes,4,rep,name=data,proto3" json:"data"`
}

func (x *ClassesListResp) Reset() {
	*x = ClassesListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassesListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassesListResp) ProtoMessage() {}

func (x *ClassesListResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassesListResp.ProtoReflect.Descriptor instead.
func (*ClassesListResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{12}
}

func (x *ClassesListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ClassesListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ClassesListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ClassesListResp) GetData() []*ClassesData {
	if x != nil {
		return x.Data
	}
	return nil
}

type Headline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id"`
	Url         *string `protobuf:"bytes,2,opt,name=url,proto3,oneof" json:"url"`
	Site        *string `protobuf:"bytes,3,opt,name=site,proto3,oneof" json:"site"`
	Cover       *bool   `protobuf:"varint,4,opt,name=cover,proto3,oneof" json:"cover"`
	Title       *string `protobuf:"bytes,5,opt,name=title,proto3,oneof" json:"title"`
	Description *string `protobuf:"bytes,6,opt,name=description,proto3,oneof" json:"description"`
	Image       *string `protobuf:"bytes,7,opt,name=image,proto3,oneof" json:"image"`
	CreateAt    *int64  `protobuf:"varint,8,opt,name=createAt,proto3,oneof" json:"createAt"`
	UpdateAt    *int64  `protobuf:"varint,9,opt,name=updateAt,proto3,oneof" json:"updateAt"`
}

func (x *Headline) Reset() {
	*x = Headline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Headline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Headline) ProtoMessage() {}

func (x *Headline) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Headline.ProtoReflect.Descriptor instead.
func (*Headline) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{13}
}

func (x *Headline) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Headline) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Headline) GetSite() string {
	if x != nil && x.Site != nil {
		return *x.Site
	}
	return ""
}

func (x *Headline) GetCover() bool {
	if x != nil && x.Cover != nil {
		return *x.Cover
	}
	return false
}

func (x *Headline) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Headline) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Headline) GetImage() string {
	if x != nil && x.Image != nil {
		return *x.Image
	}
	return ""
}

func (x *Headline) GetCreateAt() int64 {
	if x != nil && x.CreateAt != nil {
		return *x.CreateAt
	}
	return 0
}

func (x *Headline) GetUpdateAt() int64 {
	if x != nil && x.UpdateAt != nil {
		return *x.UpdateAt
	}
	return 0
}

type HeadlineListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64             `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	Data *HeadlineListData `protobuf:"bytes,3,opt,name=data,proto3,oneof" json:"data"`
}

func (x *HeadlineListResp) Reset() {
	*x = HeadlineListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeadlineListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadlineListResp) ProtoMessage() {}

func (x *HeadlineListResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadlineListResp.ProtoReflect.Descriptor instead.
func (*HeadlineListResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{14}
}

func (x *HeadlineListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HeadlineListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *HeadlineListResp) GetData() *HeadlineListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BaseUUIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *BaseUUIDResp) Reset() {
	*x = BaseUUIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseUUIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseUUIDResp) ProtoMessage() {}

func (x *BaseUUIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseUUIDResp.ProtoReflect.Descriptor instead.
func (*BaseUUIDResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{15}
}

func (x *BaseUUIDResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BaseUUIDResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PageInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	PageSize uint64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
}

func (x *PageInfoReq) Reset() {
	*x = PageInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfoReq) ProtoMessage() {}

func (x *PageInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfoReq.ProtoReflect.Descriptor instead.
func (*PageInfoReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{16}
}

func (x *PageInfoReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfoReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GalleryListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *GalleryListRespData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Code int64                `protobuf:"varint,3,opt,name=code,proto3" json:"code"`
	Msg  string               `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg"`
}

func (x *GalleryListResp) Reset() {
	*x = GalleryListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalleryListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalleryListResp) ProtoMessage() {}

func (x *GalleryListResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalleryListResp.ProtoReflect.Descriptor instead.
func (*GalleryListResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{17}
}

func (x *GalleryListResp) GetData() *GalleryListRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GalleryListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GalleryListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ClassesListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword  *string `protobuf:"bytes,1,opt,name=keyword,proto3,oneof" json:"keyword"`
	Page     uint64  `protobuf:"varint,2,opt,name=page,proto3" json:"page"`
	PageSize uint64  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize"`
}

func (x *ClassesListReq) Reset() {
	*x = ClassesListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassesListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassesListReq) ProtoMessage() {}

func (x *ClassesListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassesListReq.ProtoReflect.Descriptor instead.
func (*ClassesListReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{18}
}

func (x *ClassesListReq) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ClassesListReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ClassesListReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type BaseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
}

func (x *BaseResp) Reset() {
	*x = BaseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResp) ProtoMessage() {}

func (x *BaseResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResp.ProtoReflect.Descriptor instead.
func (*BaseResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{19}
}

func (x *BaseResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type IDsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *IDsReq) Reset() {
	*x = IDsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDsReq) ProtoMessage() {}

func (x *IDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDsReq.ProtoReflect.Descriptor instead.
func (*IDsReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{20}
}

func (x *IDsReq) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type UUIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *UUIDReq) Reset() {
	*x = UUIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UUIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUIDReq) ProtoMessage() {}

func (x *UUIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUIDReq.ProtoReflect.Descriptor instead.
func (*UUIDReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{21}
}

func (x *UUIDReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type IllustrationsRespVo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 1:Created
	RecordState int32        `protobuf:"varint,2,opt,name=recordState,proto3" json:"recordState"`
	CreateTime  int64        `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime"`
	Title       string       `protobuf:"bytes,4,opt,name=title,proto3" json:"title"`
	Score       float64      `protobuf:"fixed64,5,opt,name=score,proto3" json:"score"`
	WikiUrl     string       `protobuf:"bytes,6,opt,name=wikiUrl,proto3" json:"wikiUrl"`
	ImagePath   string       `protobuf:"bytes,7,opt,name=imagePath,proto3" json:"imagePath"`
	IconPath    string       `protobuf:"bytes,8,opt,name=iconPath,proto3" json:"iconPath"`
	MoreImages  []string     `protobuf:"bytes,9,rep,name=moreImages,proto3" json:"moreImages"`
	Typee       string       `protobuf:"bytes,10,opt,name=typee,proto3" json:"typee"`
	Labels      []*LabelResp `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels"`
	Description string       `protobuf:"bytes,12,opt,name=description,proto3" json:"description"`
	ClassesId   int64        `protobuf:"varint,13,opt,name=classesId,proto3" json:"classesId"`
	ChineseName string       `protobuf:"bytes,14,opt,name=chineseName,proto3" json:"chineseName"`
	EnglishName string       `protobuf:"bytes,15,opt,name=englishName,proto3" json:"englishName"`
	IsUnlock    *bool        `protobuf:"varint,16,opt,name=isUnlock,proto3,oneof" json:"isUnlock"`
	UnlockTime  *int64       `protobuf:"varint,17,opt,name=unlockTime,proto3,oneof" json:"unlockTime"`
}

func (x *IllustrationsRespVo) Reset() {
	*x = IllustrationsRespVo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IllustrationsRespVo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IllustrationsRespVo) ProtoMessage() {}

func (x *IllustrationsRespVo) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IllustrationsRespVo.ProtoReflect.Descriptor instead.
func (*IllustrationsRespVo) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{22}
}

func (x *IllustrationsRespVo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IllustrationsRespVo) GetRecordState() int32 {
	if x != nil {
		return x.RecordState
	}
	return 0
}

func (x *IllustrationsRespVo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *IllustrationsRespVo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IllustrationsRespVo) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *IllustrationsRespVo) GetWikiUrl() string {
	if x != nil {
		return x.WikiUrl
	}
	return ""
}

func (x *IllustrationsRespVo) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *IllustrationsRespVo) GetIconPath() string {
	if x != nil {
		return x.IconPath
	}
	return ""
}

func (x *IllustrationsRespVo) GetMoreImages() []string {
	if x != nil {
		return x.MoreImages
	}
	return nil
}

func (x *IllustrationsRespVo) GetTypee() string {
	if x != nil {
		return x.Typee
	}
	return ""
}

func (x *IllustrationsRespVo) GetLabels() []*LabelResp {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *IllustrationsRespVo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *IllustrationsRespVo) GetClassesId() int64 {
	if x != nil {
		return x.ClassesId
	}
	return 0
}

func (x *IllustrationsRespVo) GetChineseName() string {
	if x != nil {
		return x.ChineseName
	}
	return ""
}

func (x *IllustrationsRespVo) GetEnglishName() string {
	if x != nil {
		return x.EnglishName
	}
	return ""
}

func (x *IllustrationsRespVo) GetIsUnlock() bool {
	if x != nil && x.IsUnlock != nil {
		return *x.IsUnlock
	}
	return false
}

func (x *IllustrationsRespVo) GetUnlockTime() int64 {
	if x != nil && x.UnlockTime != nil {
		return *x.UnlockTime
	}
	return 0
}

type GalleryCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64             `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	Data *GalleryCountData `protobuf:"bytes,4,opt,name=data,proto3" json:"data"`
}

func (x *GalleryCount) Reset() {
	*x = GalleryCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalleryCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalleryCount) ProtoMessage() {}

func (x *GalleryCount) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalleryCount.ProtoReflect.Descriptor instead.
func (*GalleryCount) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{23}
}

func (x *GalleryCount) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GalleryCount) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GalleryCount) GetData() *GalleryCountData {
	if x != nil {
		return x.Data
	}
	return nil
}

type IDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
}

func (x *IDReq) Reset() {
	*x = IDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDReq) ProtoMessage() {}

func (x *IDReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDReq.ProtoReflect.Descriptor instead.
func (*IDReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{24}
}

func (x *IDReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GalleryPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IllustrationId *string  `protobuf:"bytes,1,opt,name=illustrationId,proto3,oneof" json:"illustrationId"`
	Name           *string  `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name"`
	StartTime      *int64   `protobuf:"varint,3,opt,name=startTime,proto3,oneof" json:"startTime"`
	EndTime        *int64   `protobuf:"varint,4,opt,name=endTime,proto3,oneof" json:"endTime"`
	Page           uint64   `protobuf:"varint,5,opt,name=page,proto3" json:"page"`
	PageSize       uint64   `protobuf:"varint,6,opt,name=pageSize,proto3" json:"pageSize"`
	LabelIds       []string `protobuf:"bytes,7,rep,name=labelIds,proto3" json:"labelIds"`
	UserId         string   `protobuf:"bytes,8,opt,name=userId,proto3" json:"userId"`
}

func (x *GalleryPageReq) Reset() {
	*x = GalleryPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalleryPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalleryPageReq) ProtoMessage() {}

func (x *GalleryPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalleryPageReq.ProtoReflect.Descriptor instead.
func (*GalleryPageReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{25}
}

func (x *GalleryPageReq) GetIllustrationId() string {
	if x != nil && x.IllustrationId != nil {
		return *x.IllustrationId
	}
	return ""
}

func (x *GalleryPageReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GalleryPageReq) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *GalleryPageReq) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *GalleryPageReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GalleryPageReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GalleryPageReq) GetLabelIds() []string {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

func (x *GalleryPageReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type LabelCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id"`
	// 1:Created
	RecordState int32  `protobuf:"varint,2,opt,name=recordState,proto3" json:"recordState"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	Typee       string `protobuf:"bytes,4,opt,name=typee,proto3" json:"typee"`
	ParentId    string `protobuf:"bytes,5,opt,name=parentId,proto3" json:"parentId"`
}

func (x *LabelCreateReq) Reset() {
	*x = LabelCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelCreateReq) ProtoMessage() {}

func (x *LabelCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelCreateReq.ProtoReflect.Descriptor instead.
func (*LabelCreateReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{26}
}

func (x *LabelCreateReq) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *LabelCreateReq) GetRecordState() int32 {
	if x != nil {
		return x.RecordState
	}
	return 0
}

func (x *LabelCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LabelCreateReq) GetTypee() string {
	if x != nil {
		return x.Typee
	}
	return ""
}

func (x *LabelCreateReq) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

type BooleanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    bool   `protobuf:"varint,3,opt,name=data,proto3" json:"data"`
}

func (x *BooleanResp) Reset() {
	*x = BooleanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BooleanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanResp) ProtoMessage() {}

func (x *BooleanResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanResp.ProtoReflect.Descriptor instead.
func (*BooleanResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{27}
}

func (x *BooleanResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BooleanResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BooleanResp) GetData() bool {
	if x != nil {
		return x.Data
	}
	return false
}

type GalleryUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 1:Created
	RecordState *int32  `protobuf:"varint,2,opt,name=recordState,proto3,oneof" json:"recordState"`
	Name        *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name"`
	UserId      *string `protobuf:"bytes,4,opt,name=userId,proto3,oneof" json:"userId"`
	TraceId     *string `protobuf:"bytes,6,opt,name=TraceId,proto3,oneof" json:"TraceId"`
}

func (x *GalleryUpdateReq) Reset() {
	*x = GalleryUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalleryUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalleryUpdateReq) ProtoMessage() {}

func (x *GalleryUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalleryUpdateReq.ProtoReflect.Descriptor instead.
func (*GalleryUpdateReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{28}
}

func (x *GalleryUpdateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GalleryUpdateReq) GetRecordState() int32 {
	if x != nil && x.RecordState != nil {
		return *x.RecordState
	}
	return 0
}

func (x *GalleryUpdateReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GalleryUpdateReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *GalleryUpdateReq) GetTraceId() string {
	if x != nil && x.TraceId != nil {
		return *x.TraceId
	}
	return ""
}

type GalleryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64            `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Msg  string           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
	Data *GalleryRespData `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *GalleryResp) Reset() {
	*x = GalleryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalleryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalleryResp) ProtoMessage() {}

func (x *GalleryResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalleryResp.ProtoReflect.Descriptor instead.
func (*GalleryResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{29}
}

func (x *GalleryResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GalleryResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GalleryResp) GetData() *GalleryRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GalleryRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 1:Created
	RecordState  int32              `protobuf:"varint,2,opt,name=recordState,proto3" json:"recordState"`
	CreateTime   int64              `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime"`
	Name         string             `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	UserId       string             `protobuf:"bytes,5,opt,name=userId,proto3" json:"userId"`
	Illustration *IllustrationsResp `protobuf:"bytes,6,opt,name=Illustration,proto3" json:"Illustration"`
}

func (x *GalleryRespData) Reset() {
	*x = GalleryRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalleryRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalleryRespData) ProtoMessage() {}

func (x *GalleryRespData) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalleryRespData.ProtoReflect.Descriptor instead.
func (*GalleryRespData) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{30}
}

func (x *GalleryRespData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GalleryRespData) GetRecordState() int32 {
	if x != nil {
		return x.RecordState
	}
	return 0
}

func (x *GalleryRespData) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *GalleryRespData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GalleryRespData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GalleryRespData) GetIllustration() *IllustrationsResp {
	if x != nil {
		return x.Illustration
	}
	return nil
}

type IllustrationsPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels   []string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels"`
	Typee    *string  `protobuf:"bytes,2,opt,name=typee,proto3,oneof" json:"typee"`
	State    *int32   `protobuf:"varint,3,opt,name=state,proto3,oneof" json:"state"`
	Keyword  *string  `protobuf:"bytes,4,opt,name=keyword,proto3,oneof" json:"keyword"`
	Page     uint64   `protobuf:"varint,5,opt,name=page,proto3" json:"page"`
	PageSize uint64   `protobuf:"varint,6,opt,name=pageSize,proto3" json:"pageSize"`
	IsUnlock *bool    `protobuf:"varint,7,opt,name=isUnlock,proto3,oneof" json:"isUnlock"`
}

func (x *IllustrationsPageReq) Reset() {
	*x = IllustrationsPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IllustrationsPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IllustrationsPageReq) ProtoMessage() {}

func (x *IllustrationsPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IllustrationsPageReq.ProtoReflect.Descriptor instead.
func (*IllustrationsPageReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{31}
}

func (x *IllustrationsPageReq) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *IllustrationsPageReq) GetTypee() string {
	if x != nil && x.Typee != nil {
		return *x.Typee
	}
	return ""
}

func (x *IllustrationsPageReq) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *IllustrationsPageReq) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *IllustrationsPageReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *IllustrationsPageReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *IllustrationsPageReq) GetIsUnlock() bool {
	if x != nil && x.IsUnlock != nil {
		return *x.IsUnlock
	}
	return false
}

type IllustrationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 1:Created
	RecordState int32    `protobuf:"varint,2,opt,name=recordState,proto3" json:"recordState"`
	CreateTime  int64    `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime"`
	Title       string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title"`
	Score       float64  `protobuf:"fixed64,5,opt,name=score,proto3" json:"score"`
	WikiUrl     string   `protobuf:"bytes,6,opt,name=wikiUrl,proto3" json:"wikiUrl"`
	ImagePath   string   `protobuf:"bytes,7,opt,name=imagePath,proto3" json:"imagePath"`
	IconPath    string   `protobuf:"bytes,8,opt,name=iconPath,proto3" json:"iconPath"`
	MoreImages  []string `protobuf:"bytes,9,rep,name=moreImages,proto3" json:"moreImages"`
	Typee       string   `protobuf:"bytes,10,opt,name=typee,proto3" json:"typee"`
	Labels      []string `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels"`
	Description string   `protobuf:"bytes,12,opt,name=description,proto3" json:"description"`
	ClassesId   int64    `protobuf:"varint,13,opt,name=classesId,proto3" json:"classesId"`
	ChineseName string   `protobuf:"bytes,14,opt,name=chineseName,proto3" json:"chineseName"`
	EnglishName string   `protobuf:"bytes,15,opt,name=englishName,proto3" json:"englishName"`
}

func (x *IllustrationsResp) Reset() {
	*x = IllustrationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IllustrationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IllustrationsResp) ProtoMessage() {}

func (x *IllustrationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IllustrationsResp.ProtoReflect.Descriptor instead.
func (*IllustrationsResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{32}
}

func (x *IllustrationsResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IllustrationsResp) GetRecordState() int32 {
	if x != nil {
		return x.RecordState
	}
	return 0
}

func (x *IllustrationsResp) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *IllustrationsResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IllustrationsResp) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *IllustrationsResp) GetWikiUrl() string {
	if x != nil {
		return x.WikiUrl
	}
	return ""
}

func (x *IllustrationsResp) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *IllustrationsResp) GetIconPath() string {
	if x != nil {
		return x.IconPath
	}
	return ""
}

func (x *IllustrationsResp) GetMoreImages() []string {
	if x != nil {
		return x.MoreImages
	}
	return nil
}

func (x *IllustrationsResp) GetTypee() string {
	if x != nil {
		return x.Typee
	}
	return ""
}

func (x *IllustrationsResp) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *IllustrationsResp) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *IllustrationsResp) GetClassesId() int64 {
	if x != nil {
		return x.ClassesId
	}
	return 0
}

func (x *IllustrationsResp) GetChineseName() string {
	if x != nil {
		return x.ChineseName
	}
	return ""
}

func (x *IllustrationsResp) GetEnglishName() string {
	if x != nil {
		return x.EnglishName
	}
	return ""
}

type IllustrationsListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*IllustrationsRespVo `protobuf:"bytes,1,rep,name=results,proto3" json:"results"`
	Total   int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
	Code    int64                  `protobuf:"varint,3,opt,name=code,proto3" json:"code"`
	Message string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message"`
}

func (x *IllustrationsListResp) Reset() {
	*x = IllustrationsListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IllustrationsListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IllustrationsListResp) ProtoMessage() {}

func (x *IllustrationsListResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IllustrationsListResp.ProtoReflect.Descriptor instead.
func (*IllustrationsListResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{33}
}

func (x *IllustrationsListResp) GetResults() []*IllustrationsRespVo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *IllustrationsListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *IllustrationsListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IllustrationsListResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type IllustrationsListVo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64                    `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Message string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *IllustrationsListVoData `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data"`
}

func (x *IllustrationsListVo) Reset() {
	*x = IllustrationsListVo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IllustrationsListVo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IllustrationsListVo) ProtoMessage() {}

func (x *IllustrationsListVo) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IllustrationsListVo.ProtoReflect.Descriptor instead.
func (*IllustrationsListVo) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{34}
}

func (x *IllustrationsListVo) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IllustrationsListVo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IllustrationsListVo) GetData() *IllustrationsListVoData {
	if x != nil {
		return x.Data
	}
	return nil
}

type LabelListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*LabelResp `protobuf:"bytes,1,rep,name=results,proto3" json:"results"`
	Total   int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
	Code    int64        `protobuf:"varint,3,opt,name=code,proto3" json:"code"`
	Message string       `protobuf:"bytes,4,opt,name=message,proto3" json:"message"`
}

func (x *LabelListResp) Reset() {
	*x = LabelListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelListResp) ProtoMessage() {}

func (x *LabelListResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelListResp.ProtoReflect.Descriptor instead.
func (*LabelListResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{35}
}

func (x *LabelListResp) GetResults() []*LabelResp {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *LabelListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LabelListResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LabelListResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BaseIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *BaseIDResp) Reset() {
	*x = BaseIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseIDResp) ProtoMessage() {}

func (x *BaseIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseIDResp.ProtoReflect.Descriptor instead.
func (*BaseIDResp) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{36}
}

func (x *BaseIDResp) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BaseIDResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type HeadlineQueryPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64  `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	PageSize uint64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Site     *string `protobuf:"bytes,3,opt,name=site,proto3,oneof" json:"site"`
}

func (x *HeadlineQueryPageReq) Reset() {
	*x = HeadlineQueryPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeadlineQueryPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadlineQueryPageReq) ProtoMessage() {}

func (x *HeadlineQueryPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadlineQueryPageReq.ProtoReflect.Descriptor instead.
func (*HeadlineQueryPageReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{37}
}

func (x *HeadlineQueryPageReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *HeadlineQueryPageReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *HeadlineQueryPageReq) GetSite() string {
	if x != nil && x.Site != nil {
		return *x.Site
	}
	return ""
}

type HeadlineListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Data  []*Headline `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *HeadlineListData) Reset() {
	*x = HeadlineListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeadlineListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeadlineListData) ProtoMessage() {}

func (x *HeadlineListData) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeadlineListData.ProtoReflect.Descriptor instead.
func (*HeadlineListData) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{38}
}

func (x *HeadlineListData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *HeadlineListData) GetData() []*Headline {
	if x != nil {
		return x.Data
	}
	return nil
}

type IdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *IdReq) Reset() {
	*x = IdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdReq) ProtoMessage() {}

func (x *IdReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdReq.ProtoReflect.Descriptor instead.
func (*IdReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{39}
}

func (x *IdReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GalleryListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IllustrationId *string  `protobuf:"bytes,1,opt,name=illustrationId,proto3,oneof" json:"illustrationId"`
	Name           *string  `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name"`
	StartTime      *int64   `protobuf:"varint,3,opt,name=startTime,proto3,oneof" json:"startTime"`
	EndTime        *int64   `protobuf:"varint,4,opt,name=endTime,proto3,oneof" json:"endTime"`
	Page           uint64   `protobuf:"varint,5,opt,name=page,proto3" json:"page"`
	PageSize       uint64   `protobuf:"varint,6,opt,name=pageSize,proto3" json:"pageSize"`
	LabelIds       []string `protobuf:"bytes,7,rep,name=labelIds,proto3" json:"labelIds"`
}

func (x *GalleryListReq) Reset() {
	*x = GalleryListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalleryListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalleryListReq) ProtoMessage() {}

func (x *GalleryListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalleryListReq.ProtoReflect.Descriptor instead.
func (*GalleryListReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{40}
}

func (x *GalleryListReq) GetIllustrationId() string {
	if x != nil && x.IllustrationId != nil {
		return *x.IllustrationId
	}
	return ""
}

func (x *GalleryListReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GalleryListReq) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *GalleryListReq) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *GalleryListReq) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GalleryListReq) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GalleryListReq) GetLabelIds() []string {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

type IllustrationsCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id"`
	// 1:Created
	RecordState int32    `protobuf:"varint,2,opt,name=recordState,proto3" json:"recordState"`
	ClassesId   int64    `protobuf:"varint,3,opt,name=classesId,proto3" json:"classesId"`
	Score       float64  `protobuf:"fixed64,4,opt,name=score,proto3" json:"score"`
	WikiUrl     string   `protobuf:"bytes,5,opt,name=wikiUrl,proto3" json:"wikiUrl"`
	ImagePath   string   `protobuf:"bytes,6,opt,name=imagePath,proto3" json:"imagePath"`
	IconPath    string   `protobuf:"bytes,7,opt,name=iconPath,proto3" json:"iconPath"`
	MoreImages  []string `protobuf:"bytes,8,rep,name=moreImages,proto3" json:"moreImages"`
	Typee       string   `protobuf:"bytes,9,opt,name=typee,proto3" json:"typee"`
	Labels      []string `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels"`
	Description string   `protobuf:"bytes,11,opt,name=description,proto3" json:"description"`
}

func (x *IllustrationsCreateReq) Reset() {
	*x = IllustrationsCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IllustrationsCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IllustrationsCreateReq) ProtoMessage() {}

func (x *IllustrationsCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IllustrationsCreateReq.ProtoReflect.Descriptor instead.
func (*IllustrationsCreateReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{41}
}

func (x *IllustrationsCreateReq) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *IllustrationsCreateReq) GetRecordState() int32 {
	if x != nil {
		return x.RecordState
	}
	return 0
}

func (x *IllustrationsCreateReq) GetClassesId() int64 {
	if x != nil {
		return x.ClassesId
	}
	return 0
}

func (x *IllustrationsCreateReq) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *IllustrationsCreateReq) GetWikiUrl() string {
	if x != nil {
		return x.WikiUrl
	}
	return ""
}

func (x *IllustrationsCreateReq) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *IllustrationsCreateReq) GetIconPath() string {
	if x != nil {
		return x.IconPath
	}
	return ""
}

func (x *IllustrationsCreateReq) GetMoreImages() []string {
	if x != nil {
		return x.MoreImages
	}
	return nil
}

func (x *IllustrationsCreateReq) GetTypee() string {
	if x != nil {
		return x.Typee
	}
	return ""
}

func (x *IllustrationsCreateReq) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *IllustrationsCreateReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type IllustrationsUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 1:Created
	RecordState *int32   `protobuf:"varint,2,opt,name=recordState,proto3,oneof" json:"recordState"`
	ClassesId   *int64   `protobuf:"varint,3,opt,name=classesId,proto3,oneof" json:"classesId"`
	Score       *float64 `protobuf:"fixed64,4,opt,name=score,proto3,oneof" json:"score"`
	WikiUrl     *string  `protobuf:"bytes,5,opt,name=wikiUrl,proto3,oneof" json:"wikiUrl"`
	ImagePath   *string  `protobuf:"bytes,6,opt,name=imagePath,proto3,oneof" json:"imagePath"`
	IconPath    *string  `protobuf:"bytes,7,opt,name=iconPath,proto3,oneof" json:"iconPath"`
	MoreImages  []string `protobuf:"bytes,8,rep,name=moreImages,proto3" json:"moreImages"`
	Typee       *string  `protobuf:"bytes,9,opt,name=typee,proto3,oneof" json:"typee"`
	Labels      []string `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels"`
	Description *string  `protobuf:"bytes,11,opt,name=description,proto3,oneof" json:"description"`
}

func (x *IllustrationsUpdateReq) Reset() {
	*x = IllustrationsUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IllustrationsUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IllustrationsUpdateReq) ProtoMessage() {}

func (x *IllustrationsUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IllustrationsUpdateReq.ProtoReflect.Descriptor instead.
func (*IllustrationsUpdateReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{42}
}

func (x *IllustrationsUpdateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IllustrationsUpdateReq) GetRecordState() int32 {
	if x != nil && x.RecordState != nil {
		return *x.RecordState
	}
	return 0
}

func (x *IllustrationsUpdateReq) GetClassesId() int64 {
	if x != nil && x.ClassesId != nil {
		return *x.ClassesId
	}
	return 0
}

func (x *IllustrationsUpdateReq) GetScore() float64 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *IllustrationsUpdateReq) GetWikiUrl() string {
	if x != nil && x.WikiUrl != nil {
		return *x.WikiUrl
	}
	return ""
}

func (x *IllustrationsUpdateReq) GetImagePath() string {
	if x != nil && x.ImagePath != nil {
		return *x.ImagePath
	}
	return ""
}

func (x *IllustrationsUpdateReq) GetIconPath() string {
	if x != nil && x.IconPath != nil {
		return *x.IconPath
	}
	return ""
}

func (x *IllustrationsUpdateReq) GetMoreImages() []string {
	if x != nil {
		return x.MoreImages
	}
	return nil
}

func (x *IllustrationsUpdateReq) GetTypee() string {
	if x != nil && x.Typee != nil {
		return *x.Typee
	}
	return ""
}

func (x *IllustrationsUpdateReq) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *IllustrationsUpdateReq) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type IllustrationsListVoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Data  []*IllustrationsRespVo `protobuf:"bytes,2,rep,name=Data,proto3" json:"Data"`
}

func (x *IllustrationsListVoData) Reset() {
	*x = IllustrationsListVoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IllustrationsListVoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IllustrationsListVoData) ProtoMessage() {}

func (x *IllustrationsListVoData) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IllustrationsListVoData.ProtoReflect.Descriptor instead.
func (*IllustrationsListVoData) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{43}
}

func (x *IllustrationsListVoData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *IllustrationsListVoData) GetData() []*IllustrationsRespVo {
	if x != nil {
		return x.Data
	}
	return nil
}

type LabelUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	// 1:Created
	RecordState *int32  `protobuf:"varint,2,opt,name=recordState,proto3,oneof" json:"recordState"`
	Name        *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name"`
	Typee       *string `protobuf:"bytes,4,opt,name=typee,proto3,oneof" json:"typee"`
	ParentId    *string `protobuf:"bytes,5,opt,name=parentId,proto3,oneof" json:"parentId"`
}

func (x *LabelUpdateReq) Reset() {
	*x = LabelUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelUpdateReq) ProtoMessage() {}

func (x *LabelUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelUpdateReq.ProtoReflect.Descriptor instead.
func (*LabelUpdateReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{44}
}

func (x *LabelUpdateReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LabelUpdateReq) GetRecordState() int32 {
	if x != nil && x.RecordState != nil {
		return *x.RecordState
	}
	return 0
}

func (x *LabelUpdateReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LabelUpdateReq) GetTypee() string {
	if x != nil && x.Typee != nil {
		return *x.Typee
	}
	return ""
}

func (x *LabelUpdateReq) GetParentId() string {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return ""
}

type LabelVo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64      `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data    *LabelResp `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
}

func (x *LabelVo) Reset() {
	*x = LabelVo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelVo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelVo) ProtoMessage() {}

func (x *LabelVo) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelVo.ProtoReflect.Descriptor instead.
func (*LabelVo) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{45}
}

func (x *LabelVo) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LabelVo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LabelVo) GetData() *LabelResp {
	if x != nil {
		return x.Data
	}
	return nil
}

type UUIDsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids"`
}

func (x *UUIDsReq) Reset() {
	*x = UUIDsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bird_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UUIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUIDsReq) ProtoMessage() {}

func (x *UUIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_bird_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUIDsReq.ProtoReflect.Descriptor instead.
func (*UUIDsReq) Descriptor() ([]byte, []int) {
	return file_bird_proto_rawDescGZIP(), []int{46}
}

func (x *UUIDsReq) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

var File_bird_proto protoreflect.FileDescriptor

var file_bird_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x62, 0x69,
	0x72, 0x64, 0x22, 0x56, 0x0a, 0x13, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x47,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xd3, 0x01, 0x0a, 0x14, 0x49,
	0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x74,
	0x79, 0x70, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0xa1, 0x01, 0x0a, 0x0b, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x43, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x45, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x45, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x10, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x66, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x56,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x09, 0x0a, 0x07, 0x4e,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x22, 0x28, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x75,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x75, 0x72, 0x49, 0x64,
	0x22, 0xa3, 0x01, 0x0a, 0x09, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x10, 0x47, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x0c, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x4c, 0x0a, 0x0f, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x69, 0x72,
	0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x74, 0x0a, 0x0f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe9, 0x02, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75,
	0x72, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x22, 0x72, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2f, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69,
	0x72, 0x64, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x55,
	0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x3e, 0x0a, 0x0b, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x66, 0x0a, 0x0f, 0x47, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x69, 0x72,
	0x64, 0x2e, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x22, 0x6b, 0x0a, 0x0e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x1c,
	0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x1a, 0x0a, 0x06,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x19, 0x0a, 0x07, 0x55, 0x55, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xac, 0x04, 0x0a, 0x13, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x56, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x6b,
	0x69, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x6b, 0x69,
	0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x6f, 0x72, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x72, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x08, 0x69, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x69, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0a, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0a, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x60, 0x0a, 0x0c, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x47, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x17, 0x0a, 0x05, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb2, 0x02,
	0x0a, 0x0e, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x2b, 0x0a, 0x0e, 0x69, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6c, 0x6c, 0x75,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x49, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x69, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x0e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x0b, 0x42, 0x6f, 0x6f,
	0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xce, 0x01, 0x0a, 0x10, 0x47,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x25, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x02, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x07, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x0b, 0x47,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcc, 0x01, 0x0a, 0x0f,
	0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3b, 0x0a,
	0x0c, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0c, 0x49, 0x6c,
	0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x81, 0x02, 0x0a, 0x14, 0x49,
	0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x74,
	0x79, 0x70, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1f, 0x0a, 0x08, 0x69, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x03, 0x52, 0x08, 0x69, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0xb7,
	0x03, 0x0a, 0x11, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x6b, 0x69, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x6b, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x63,
	0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x63,
	0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x72, 0x65, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x72, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65,
	0x73, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x73, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73,
	0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x67,
	0x6c, 0x69, 0x73, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x15, 0x49, 0x6c, 0x6c,
	0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x56, 0x6f, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x76, 0x0a, 0x13, 0x49,
	0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x31, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x0d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x2e, 0x0a, 0x0a, 0x42, 0x61, 0x73, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x69, 0x0a, 0x14, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x04,
	0x73, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x73, 0x69,
	0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x22, 0x4c,
	0x0a, 0x10, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x17, 0x0a, 0x05,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9a, 0x02, 0x0a, 0x0e, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x0e, 0x69, 0x6c, 0x6c, 0x75,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0e, 0x69, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x02, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x69, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xce, 0x02, 0x0a, 0x16, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x6b, 0x69,
	0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x6b, 0x69, 0x55,
	0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x6f, 0x72, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x6f, 0x72, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70,
	0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x05, 0x0a, 0x03,
	0x5f, 0x69, 0x64, 0x22, 0xd3, 0x03, 0x0a, 0x16, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x77, 0x69, 0x6b, 0x69, 0x55, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x77, 0x69, 0x6b, 0x69, 0x55, 0x72, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x50,
	0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x72, 0x65, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x72, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x49, 0x64, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x77, 0x69, 0x6b,
	0x69, 0x55, 0x72, 0x6c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x17, 0x49, 0x6c, 0x6c,
	0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e,
	0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x56, 0x6f, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xcc, 0x01, 0x0a, 0x0e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0b,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x74,
	0x79, 0x70, 0x65, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x07, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x56, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1c, 0x0a, 0x08, 0x55, 0x55, 0x49, 0x44, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x32, 0xdc, 0x0c, 0x0a, 0x04, 0x62, 0x69, 0x72, 0x64, 0x12, 0x2b, 0x0a,
	0x0c, 0x69, 0x6e, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x0b, 0x2e,
	0x62, 0x69, 0x72, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x62, 0x69, 0x72,
	0x64, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0d, 0x67, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x62, 0x69,
	0x72, 0x64, 0x2e, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x47, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x0d, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x47, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0b, 0x67, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x47, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x62,
	0x69, 0x72, 0x64, 0x2e, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0b, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e,
	0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x31, 0x0a, 0x0c, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x0d, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x12,
	0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x12, 0x69, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e,
	0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c,
	0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4b, 0x0a, 0x12, 0x69, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c,
	0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x10,
	0x69, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1a, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x62,
	0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x16, 0x66, 0x69, 0x6e,
	0x64, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x12, 0x3b, 0x0a, 0x13, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0b, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x15, 0x75, 0x6e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0b, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6c, 0x6c, 0x75, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x2e, 0x62,
	0x69, 0x72, 0x64, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x62, 0x69, 0x72, 0x64,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0b,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x62, 0x69,
	0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x0f, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x34, 0x0a, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x09, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x62, 0x69, 0x72, 0x64,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38,
	0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x79, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x12, 0x2b, 0x0a, 0x0d, 0x66, 0x69, 0x6e, 0x64,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0b, 0x2e, 0x62, 0x69, 0x72, 0x64,
	0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x56, 0x6f, 0x12, 0x2c, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x0b, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0e, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x0b, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x0b, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x11, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2f, 0x0a, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65,
	0x73, 0x12, 0x0d, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x11, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x43, 0x0a, 0x11, 0x71, 0x75, 0x65, 0x72, 0x79, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x62,
	0x69, 0x72, 0x64, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x0e, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x1a, 0x0e, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x0e, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e,
	0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x1a, 0x0e, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e,
	0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x0e, 0x2e, 0x62, 0x69, 0x72,
	0x64, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x1a, 0x0e, 0x2e, 0x62, 0x69, 0x72,
	0x64, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x11, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x41, 0x6c, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12,
	0x1a, 0x2e, 0x62, 0x69, 0x72, 0x64, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x62, 0x69,
	0x72, 0x64, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x62, 0x69, 0x72, 0x64, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bird_proto_rawDescOnce sync.Once
	file_bird_proto_rawDescData = file_bird_proto_rawDesc
)

func file_bird_proto_rawDescGZIP() []byte {
	file_bird_proto_rawDescOnce.Do(func() {
		file_bird_proto_rawDescData = protoimpl.X.CompressGZIP(file_bird_proto_rawDescData)
	})
	return file_bird_proto_rawDescData
}

var file_bird_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_bird_proto_goTypes = []interface{}{
	(*GalleryListRespData)(nil),     // 0: bird.GalleryListRespData
	(*IllustrationsListReq)(nil),    // 1: bird.IllustrationsListReq
	(*ClassesData)(nil),             // 2: bird.ClassesData
	(*GalleryCountData)(nil),        // 3: bird.GalleryCountData
	(*Empty)(nil),                   // 4: bird.Empty
	(*LabelListVo)(nil),             // 5: bird.LabelListVo
	(*NullReq)(nil),                 // 6: bird.NullReq
	(*HeadlineQueryReq)(nil),        // 7: bird.HeadlineQueryReq
	(*LabelResp)(nil),               // 8: bird.LabelResp
	(*GalleryCreateReq)(nil),        // 9: bird.GalleryCreateReq
	(*LabelListReq)(nil),            // 10: bird.LabelListReq
	(*LabelListVoData)(nil),         // 11: bird.LabelListVoData
	(*ClassesListResp)(nil),         // 12: bird.ClassesListResp
	(*Headline)(nil),                // 13: bird.Headline
	(*HeadlineListResp)(nil),        // 14: bird.HeadlineListResp
	(*BaseUUIDResp)(nil),            // 15: bird.BaseUUIDResp
	(*PageInfoReq)(nil),             // 16: bird.PageInfoReq
	(*GalleryListResp)(nil),         // 17: bird.GalleryListResp
	(*ClassesListReq)(nil),          // 18: bird.ClassesListReq
	(*BaseResp)(nil),                // 19: bird.BaseResp
	(*IDsReq)(nil),                  // 20: bird.IDsReq
	(*UUIDReq)(nil),                 // 21: bird.UUIDReq
	(*IllustrationsRespVo)(nil),     // 22: bird.IllustrationsRespVo
	(*GalleryCount)(nil),            // 23: bird.GalleryCount
	(*IDReq)(nil),                   // 24: bird.IDReq
	(*GalleryPageReq)(nil),          // 25: bird.GalleryPageReq
	(*LabelCreateReq)(nil),          // 26: bird.LabelCreateReq
	(*BooleanResp)(nil),             // 27: bird.BooleanResp
	(*GalleryUpdateReq)(nil),        // 28: bird.GalleryUpdateReq
	(*GalleryResp)(nil),             // 29: bird.GalleryResp
	(*GalleryRespData)(nil),         // 30: bird.GalleryRespData
	(*IllustrationsPageReq)(nil),    // 31: bird.IllustrationsPageReq
	(*IllustrationsResp)(nil),       // 32: bird.IllustrationsResp
	(*IllustrationsListResp)(nil),   // 33: bird.IllustrationsListResp
	(*IllustrationsListVo)(nil),     // 34: bird.IllustrationsListVo
	(*LabelListResp)(nil),           // 35: bird.LabelListResp
	(*BaseIDResp)(nil),              // 36: bird.BaseIDResp
	(*HeadlineQueryPageReq)(nil),    // 37: bird.HeadlineQueryPageReq
	(*HeadlineListData)(nil),        // 38: bird.HeadlineListData
	(*IdReq)(nil),                   // 39: bird.IdReq
	(*GalleryListReq)(nil),          // 40: bird.GalleryListReq
	(*IllustrationsCreateReq)(nil),  // 41: bird.IllustrationsCreateReq
	(*IllustrationsUpdateReq)(nil),  // 42: bird.IllustrationsUpdateReq
	(*IllustrationsListVoData)(nil), // 43: bird.IllustrationsListVoData
	(*LabelUpdateReq)(nil),          // 44: bird.LabelUpdateReq
	(*LabelVo)(nil),                 // 45: bird.LabelVo
	(*UUIDsReq)(nil),                // 46: bird.UUIDsReq
}
var file_bird_proto_depIdxs = []int32{
	30, // 0: bird.GalleryListRespData.data:type_name -> bird.GalleryRespData
	11, // 1: bird.LabelListVo.data:type_name -> bird.LabelListVoData
	8,  // 2: bird.LabelListVoData.data:type_name -> bird.LabelResp
	2,  // 3: bird.ClassesListResp.data:type_name -> bird.ClassesData
	38, // 4: bird.HeadlineListResp.data:type_name -> bird.HeadlineListData
	0,  // 5: bird.GalleryListResp.data:type_name -> bird.GalleryListRespData
	8,  // 6: bird.IllustrationsRespVo.labels:type_name -> bird.LabelResp
	3,  // 7: bird.GalleryCount.data:type_name -> bird.GalleryCountData
	30, // 8: bird.GalleryResp.data:type_name -> bird.GalleryRespData
	32, // 9: bird.GalleryRespData.Illustration:type_name -> bird.IllustrationsResp
	22, // 10: bird.IllustrationsListResp.results:type_name -> bird.IllustrationsRespVo
	43, // 11: bird.IllustrationsListVo.Data:type_name -> bird.IllustrationsListVoData
	8,  // 12: bird.LabelListResp.results:type_name -> bird.LabelResp
	13, // 13: bird.HeadlineListData.data:type_name -> bird.Headline
	22, // 14: bird.IllustrationsListVoData.Data:type_name -> bird.IllustrationsRespVo
	8,  // 15: bird.LabelVo.data:type_name -> bird.LabelResp
	4,  // 16: bird.bird.initDatabase:input_type -> bird.Empty
	9,  // 17: bird.bird.galleryCreate:input_type -> bird.GalleryCreateReq
	39, // 18: bird.bird.galleryDelete:input_type -> bird.IdReq
	40, // 19: bird.bird.galleryList:input_type -> bird.GalleryListReq
	25, // 20: bird.bird.galleryPage:input_type -> bird.GalleryPageReq
	6,  // 21: bird.bird.galleryCount:input_type -> bird.NullReq
	41, // 22: bird.bird.illustrationCreate:input_type -> bird.IllustrationsCreateReq
	42, // 23: bird.bird.illustrationUpdate:input_type -> bird.IllustrationsUpdateReq
	1,  // 24: bird.bird.illustrationList:input_type -> bird.IllustrationsListReq
	31, // 25: bird.bird.findIllustrationByPage:input_type -> bird.IllustrationsPageReq
	39, // 26: bird.bird.publishIllustration:input_type -> bird.IdReq
	39, // 27: bird.bird.unpublishIllustration:input_type -> bird.IdReq
	39, // 28: bird.bird.deleteIllustration:input_type -> bird.IdReq
	26, // 29: bird.bird.labelCreate:input_type -> bird.LabelCreateReq
	44, // 30: bird.bird.labelUpdate:input_type -> bird.LabelUpdateReq
	10, // 31: bird.bird.labelList:input_type -> bird.LabelListReq
	10, // 32: bird.bird.findLabelByPage:input_type -> bird.LabelListReq
	39, // 33: bird.bird.findLabelById:input_type -> bird.IdReq
	39, // 34: bird.bird.publishLabel:input_type -> bird.IdReq
	39, // 35: bird.bird.unpublishLabel:input_type -> bird.IdReq
	39, // 36: bird.bird.deleteLabel:input_type -> bird.IdReq
	6,  // 37: bird.bird.initClasses:input_type -> bird.NullReq
	18, // 38: bird.bird.classesList:input_type -> bird.ClassesListReq
	7,  // 39: bird.bird.queryHeadlineList:input_type -> bird.HeadlineQueryReq
	13, // 40: bird.bird.createHeadline:input_type -> bird.Headline
	13, // 41: bird.bird.updateHeadline:input_type -> bird.Headline
	13, // 42: bird.bird.deleteHeadline:input_type -> bird.Headline
	37, // 43: bird.bird.queryAllHeadlines:input_type -> bird.HeadlineQueryPageReq
	19, // 44: bird.bird.initDatabase:output_type -> bird.BaseResp
	29, // 45: bird.bird.galleryCreate:output_type -> bird.GalleryResp
	29, // 46: bird.bird.galleryDelete:output_type -> bird.GalleryResp
	17, // 47: bird.bird.galleryList:output_type -> bird.GalleryListResp
	17, // 48: bird.bird.galleryPage:output_type -> bird.GalleryListResp
	23, // 49: bird.bird.galleryCount:output_type -> bird.GalleryCount
	32, // 50: bird.bird.illustrationCreate:output_type -> bird.IllustrationsResp
	32, // 51: bird.bird.illustrationUpdate:output_type -> bird.IllustrationsResp
	33, // 52: bird.bird.illustrationList:output_type -> bird.IllustrationsListResp
	34, // 53: bird.bird.findIllustrationByPage:output_type -> bird.IllustrationsListVo
	32, // 54: bird.bird.publishIllustration:output_type -> bird.IllustrationsResp
	32, // 55: bird.bird.unpublishIllustration:output_type -> bird.IllustrationsResp
	27, // 56: bird.bird.deleteIllustration:output_type -> bird.BooleanResp
	8,  // 57: bird.bird.labelCreate:output_type -> bird.LabelResp
	8,  // 58: bird.bird.labelUpdate:output_type -> bird.LabelResp
	35, // 59: bird.bird.labelList:output_type -> bird.LabelListResp
	5,  // 60: bird.bird.findLabelByPage:output_type -> bird.LabelListVo
	45, // 61: bird.bird.findLabelById:output_type -> bird.LabelVo
	8,  // 62: bird.bird.publishLabel:output_type -> bird.LabelResp
	8,  // 63: bird.bird.unpublishLabel:output_type -> bird.LabelResp
	27, // 64: bird.bird.deleteLabel:output_type -> bird.BooleanResp
	27, // 65: bird.bird.initClasses:output_type -> bird.BooleanResp
	12, // 66: bird.bird.classesList:output_type -> bird.ClassesListResp
	14, // 67: bird.bird.queryHeadlineList:output_type -> bird.HeadlineListResp
	13, // 68: bird.bird.createHeadline:output_type -> bird.Headline
	13, // 69: bird.bird.updateHeadline:output_type -> bird.Headline
	19, // 70: bird.bird.deleteHeadline:output_type -> bird.BaseResp
	14, // 71: bird.bird.queryAllHeadlines:output_type -> bird.HeadlineListResp
	44, // [44:72] is the sub-list for method output_type
	16, // [16:44] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_bird_proto_init() }
func file_bird_proto_init() {
	if File_bird_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bird_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalleryListRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IllustrationsListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalleryCountData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelListVo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NullReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeadlineQueryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalleryCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelListVoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassesListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Headline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeadlineListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseUUIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalleryListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassesListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UUIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IllustrationsRespVo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalleryCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalleryPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BooleanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalleryUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalleryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalleryRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IllustrationsPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IllustrationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IllustrationsListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IllustrationsListVo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeadlineQueryPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeadlineListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalleryListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IllustrationsCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IllustrationsUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IllustrationsListVoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelVo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bird_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UUIDsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bird_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[25].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[26].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[31].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[41].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[42].OneofWrappers = []interface{}{}
	file_bird_proto_msgTypes[44].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bird_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bird_proto_goTypes,
		DependencyIndexes: file_bird_proto_depIdxs,
		MessageInfos:      file_bird_proto_msgTypes,
	}.Build()
	File_bird_proto = out.File
	file_bird_proto_rawDesc = nil
	file_bird_proto_goTypes = nil
	file_bird_proto_depIdxs = nil
}
